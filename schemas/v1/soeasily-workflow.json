{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://schemas.soeasily.com/v1/soeasily-workflow.json",
  "title": "SoEasily Workflow DSL v1",
  "description": "Schema for defining a SoEasily workflow, which consists of a series of connected actions.",
  "version": "1.0.0",
  "type": "object",

  "properties": {
    "header": {
      "type": "object",
      "description": "Contains metadata about the workflow itself.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique identifier for this specific workflow instance."
        },
        "title": {
          "type": "string",
          "description": "A user-friendly name for the workflow."
        },
        "description": {
          "type": "string",
          "description": "An optional, more detailed explanation of what the workflow does."
        },
        "version": {
          "type": "integer",
          "description": "The version number of this workflow, incremented on each save.",
          "minimum": 1
        },
        "tags": {
          "type": "array",
          "description": "Keywords to help categorize and search for the workflow.",
          "items": { "type": "string" }
        },
        "prompt": {
          "type": "string",
          "description": "An optional prompt or instruction text for the workflow."
        }
      },
      "required": ["id", "title", "version"]
    },

    "config_schema": {
      "$ref": "http://json-schema.org/draft-07/schema#",
      "description": "A JSON Schema defining the configurable properties of the action."
    },
    "input_schema": {},
    "output_schema": {
      "$ref": "http://json-schema.org/draft-07/schema#",
      "description": "A JSON Schema defining the data output by the action."
    },
    "credentials_schema": {
      "$ref": "http://json-schema.org/draft-07/schema#",
      "description": "An optional JSON Schema defining any required credentials."
    },

    "steps": {
      "type": "array",
      "description": "The list of all action nodes that make up this workflow.",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for this specific instance of an action within the workflow, e.g., 'manual_trigger_1', 'http_request_5'."
          },
          "action": {
            "type": "string",
            "description": "The globally unique ID of the action definition this instance is based on (e.g., 'soeasily.core.http_request')."
          },
          "config": {
            "type": "object",
            "description": "The specific configuration for this action instance, which must conform to the 'config_schema' in the corresponding action definition file."
          }
        },
        "required": ["id", "action"]
      }
    },

    "connections": {
      "type": "array",
      "description": "Defines the execution flow by connecting the output of one action to the input of another.",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for this specific instance of a connection within the workflow, e.g., 'manual_trigger_1', 'http_request_5'."
          },
          "source_action": {
            "type": "string",
            "description": "The 'instance_id' of the action that is providing the output."
          },
          "target_action": {
            "type": "string",
            "description": "The 'instance_id' of the action that is receiving the input."
          },
          "data_mapping": {
            "type": "object",
            "description": "JSONata expressions to transform and map data from the source output to the target input. The keys are the target input fields, and the values are the mapping expressions.",
            "additionalProperties": true,
            "examples": [
              {
                "url": "source.body.request_url",
                "user_id": "source.headers.'x-user-id'"
              }
            ]
          },
          "condition": {
             "type": "string",
             "description": "An optional JSONata expression that must evaluate to true for this connection to be followed. Used for branching logic."
          }
        },
        "required": ["id", "source_action", "target_action"]
      }
    },

    "error_handling": {
      "type": "object",
      "description": "Defines a global strategy for handling errors that occur during workflow execution.",
      "properties": {
        "on_error_action": {
          "type": "string",
          "description": "The 'instance_id' of an action to execute if any other action in the workflow fails (e.g., a notification action)."
        },
        "retry_policy": {
          "type": "object",
          "properties": {
            "max_attempts": { "type": "integer", "minimum": 1, "default": 1 },
            "delay_milliseconds": { "type": "integer", "minimum": 250, "maximum": 30000, "default": 1000 }
          }
        }
      }
    },

    "tests": {
      "type": "array",
      "description": "Named tests demonstrating the workflow's behavior.",
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "config": { "type": "object" },
          "input": { "type": "object" },
          "expected_output": { "type": "object" }
        },
        "required": ["name", "input", "expected_output"]
      }
    }
  },
  "required": ["header", "config_schema", "input_schema", "output_schema", "actions", "connections"]
}
